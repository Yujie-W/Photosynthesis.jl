var documenterSearchIndex = {"docs":
[{"location":"#Photosynthesis.jl","page":"Home","title":"Photosynthesis.jl","text":"","category":"section"},{"location":"#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg;\nPkg.add(\"Photosynthesis\");","category":"page"},{"location":"#About","page":"Home","title":"About","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Photosynthesis models for C3 and C4 photosynthesis. Photosynthesis.jl supports three photosynthesis models and two fluorescence models. The photosynthesis models are","category":"page"},{"location":"","page":"Home","title":"Home","text":"C3VJP model based on classic C3 model, which is known as FvCB model (Farquhar et al. 1980)\nC4VJP model based on classic C4 model, which is known as Collaz model (Collaz et al. 1992)\nC3Cytochrome model based on a new C3 model developed by Johnson and Berry (2021)","category":"page"},{"location":"","page":"Home","title":"Home","text":"We, however, made some modifications by adding a product limited photosynthetic rate to the C3 models, and a Rubisco limited photosynthetic rate to the C4 model.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Besides the tranditional photosynthesis model, we also included functions to compute fluorescence related parameters, such as fluorescence quantum yield and non-photochemical quenching. he two implemented fluorescence models are","category":"page"},{"location":"","page":"Home","title":"Home","text":"Van der Tol et al. (2013) fluorescence model to use with C3VJP and C4VJP models\nJohnson and Berry (2021) fluorescence model to use with C3Cytochrome model","category":"page"},{"location":"","page":"Home","title":"Home","text":"We aim to make Photosynthesis.jl a standalone package rather than just part of the CliMA Land model. Thus, in the documentations below, we will present examples of how to use Photosynthesis.jl at the leaf level. Same logic applies to canopy scale simulations.","category":"page"},{"location":"#Model-Selection","page":"Home","title":"Model Selection","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Starting from v0.3, photosynthesis and fluorescence model selection is done by setting up the fields of a leaf. There are three types of leaf in Photosynthesis (all the structures are defined in ClimaCache.jl and shared among all CliMA Land submodules), and they are","category":"page"},{"location":"","page":"Home","title":"Home","text":"Leaf for a single leaf to use in leaf level research\nLeaves1D for a vector of leaves to use in big leaf models\nLeaves2D for a matrix of sunlit fractions and a shaded fraction to use along with canopy with leaf angular distribution","category":"page"},{"location":"","page":"Home","title":"Home","text":"For all of the three leaf structs, there are two fields named","category":"page"},{"location":"","page":"Home","title":"Home","text":"PSM for photosynthesis model\nPRC for photosynthesis reaction center","category":"page"},{"location":"","page":"Home","title":"Home","text":"A C3VJPModel type PSM along with a VJPReactionCenter type PRC defines the C3VJP model; a C4VJPModel type PSM along with a VJPReactionCenter type PRC defines the C4VJP model; and a C3CytochromeModel type PSM along with a CytochromeReactionCenter type PRC defines the C3Cytochrome model. For instance, leaf_c3, leaf_c4, and leaf_cy each defines a model to use the three predefined photosynthesis models:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using ClimaCache;\nFT = Float64;\n\nleaf_c3 = ClimaCache.Leaf{FT}();\nleaf_c4 = ClimaCache.Leaf{FT}(PSM = ClimaCache.C4VJPModel{FT}());\nleaf_cy = ClimaCache.Leaf{FT}(PSM = ClimaCache.C3CytochromeModel{FT}(), PRC = ClimaCache.CytochromeReactionCenter{FT}());\n\n# users can define the same fields for Leaves1D and Leaves2D to custoimize photosynthesis model\nleaf_d3 = ClimaCache.Leaves1D{FT}();\nleaf_d4 = ClimaCache.Leaves1D{FT}(PSM = ClimaCache.C4VJPModel{FT}());\nleaf_dy = ClimaCache.Leaves1D{FT}(PSM = ClimaCache.C3CytochromeModel{FT}(), PRC = ClimaCache.CytochromeReactionCenter{FT}());\nleaf_e3 = ClimaCache.Leaves2D{FT}();\nleaf_e4 = ClimaCache.Leaves2D{FT}(PSM = ClimaCache.C4VJPModel{FT}());\nleaf_ey = ClimaCache.Leaves2D{FT}(PSM = ClimaCache.C3CytochromeModel{FT}(), PRC = ClimaCache.CytochromeReactionCenter{FT}());","category":"page"},{"location":"#Photosynthesis-Model-Procedure","page":"Home","title":"Photosynthesis Model Procedure","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"For all three photosynthesis+fluorescence combo models, photosynthetic rates are computed using the following procedure:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Update temperature dependent variables using photosystem_temperature_dependence!\nCalculate electron transport rate using photosystem_electron_transport!\nCalculate RubisCO limited rate using rubisco_limited_rate!\nCalculate light limited rate using light_limited_rate!\nCalculate product limited rate using product_limited_rate!\nCalculate gross and net rates using colimit_photosynthesis!\nUpdate fluorescence related variables using photosystem_coefficients!","category":"page"},{"location":"","page":"Home","title":"Home","text":"Yet, for convenience, all the listed steps are combined in one function leaf_photosynthesis! (see page API for all supported methods). At leaf level, one can simply call the function, for example","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Photosynthesis\n\nair    = ClimaCache.AirLayer{FT}();\ng_mode = ClimaCache.GCO₂Mode();\np_mode = ClimaCache.PCO₂Mode();\nPhotosynthesis.leaf_photosynthesis!(leaf_c3, air, g_mode);\nPhotosynthesis.leaf_photosynthesis!(leaf_cy, air, p_mode);","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note here that (1) we need parameters from surrounding air to compute photosynthetic rates, such as oxygen concentration, (2) GCO₂Mode mode is used when leaf total diffusive conductance for CO₂ is known, and PCO₂Mode is used when leaf internal CO₂ partial pressure is known, and (3) leaf and air conditions must be synced before calling the leaf_photosynthesis! function. For example, to construct an A-Ci curve, one will need to change the field _p_CO₂_i to proceed:","category":"page"},{"location":"","page":"Home","title":"Home","text":"leaf_c3.t = 300;\nleaf_c3.ppar = 1000;\nfor _p in 5:5:100\n    leaf_c3._p_CO₂_i = _p;\n    Photosynthesis.leaf_photosynthesis!(leaf_c3, air, p_mode);\n    @info \"Photosynthetic rate at\" leaf_c3._p_CO₂_i leaf_c3.a_net;\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the example above, we first defined leaf temperature is 300 K (note that we use Kelvin here, not Celcius), then prescribed a PPAR of 1000 μmol m⁻² s⁻¹. PPAR is the photosynthetically active radiation (PAR) that goes to photosystems; PPAR is different from APAR (PAR absorbed by leaf, some APAR does not go to photosystems). Ssee our technical note for the difference between PAR, APAR, and PPAR. Similarly, we can try out how Anet responds to leaf temperature and PPAR by modifying the example above.","category":"page"},{"location":"API/#Photosynthesis","page":"API","title":"Photosynthesis","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = Photosynthesis","category":"page"},{"location":"API/#Photosynthesis-model","page":"API","title":"Photosynthesis model","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"leaf_photosynthesis!\nleaf_photosynthesis!(lf::Union{Leaf{FT}, Leaves2D{FT}}, air::AirLayer{FT}, g_lc::FT, ppar::FT, t::FT = lf.t) where {FT<:AbstractFloat}\nleaf_photosynthesis!(lf::Union{Leaf{FT}, Leaves1D{FT}, Leaves2D{FT}}, air::AirLayer{FT}, mode::Union{GCO₂Mode, PCO₂Mode}) where {FT<:AbstractFloat}\nleaf_photosynthesis!(spac::MonoElementSPAC{FT}, mode::Union{GCO₂Mode, PCO₂Mode}) where {FT<:AbstractFloat}","category":"page"},{"location":"API/#Photosynthesis.leaf_photosynthesis!","page":"API","title":"Photosynthesis.leaf_photosynthesis!","text":"Per refactored Photosynthesis module, the only things one need to know is the public function leaf_photosynthesis! and some construtors from ClimaCache. See the examples in the methods below for     details about how to use the function. The steps for computing photosynthetic rates are\n\nUpdate temperature dependent variables using photosystem_temperature_dependence!\nCalculate electron transport rate using photosystem_electron_transport!\nCalculate RubisCO limited rate using rubisco_limited_rate!\nCalculate light limited rate using light_limited_rate!\nCalculate product limited rate using product_limited_rate!\nCalculate gross and net rates using colimit_photosynthesis!\nUpdate fluorescence related variables using photosystem_coefficients!\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.leaf_photosynthesis!-Union{Tuple{FT}, Tuple{Union{ClimaCache.Leaf{FT}, ClimaCache.Leaves2D{FT}}, ClimaCache.AirLayer{FT}, FT, FT}, Tuple{Union{ClimaCache.Leaf{FT}, ClimaCache.Leaves2D{FT}}, ClimaCache.AirLayer{FT}, FT, FT, FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.leaf_photosynthesis!","text":"leaf_photosynthesis!(lf::Union{Leaf{FT}, Leaves2D{FT}}, air::AirLayer{FT}, g_lc::FT, ppar::FT, t::FT = lf.t) where {FT<:AbstractFloat}\nleaf_photosynthesis!(lf::Leaves1D{FT}, air::AirLayer{FT}, g_lc::FT, ppar::FT, t::FT) where {FT<:AbstractFloat}\n\nUpdates leaf photosynthetic rates based on CO₂ partial pressure (for StomataModels.jl temporary use), given\n\nlf Leaf, Leaves1D, or Leaves2D type structure that stores biophysical, reaction center, and photosynthesis model structures\nair AirLayer structure for environmental conditions like O₂ partial pressure\ng_lc Leaf diffusive conductance to CO₂ in [mol m⁻² s⁻¹], default is leaf._g_CO₂\nppar APAR used for photosynthesis\nt Leaf temperature in [K]\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.leaf_photosynthesis!-Union{Tuple{FT}, Tuple{Union{ClimaCache.Leaf{FT}, ClimaCache.Leaves1D{FT}, ClimaCache.Leaves2D{FT}}, ClimaCache.AirLayer{FT}, Union{ClimaCache.GCO₂Mode, ClimaCache.PCO₂Mode}}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.leaf_photosynthesis!","text":"leaf_photosynthesis!(lf::Union{Leaf{FT}, Leaves1D{FT}, Leaves2D{FT}}, air::AirLayer{FT}, mode::Union{GCO₂Mode, PCO₂Mode}) where {FT<:AbstractFloat}\n\nUpdates leaf photosynthetic rates based on CO₂ partial pressure or CO₂ conductance, given\n\nlf Leaf, Leaves1D, or Leaves2D type structure that stores biophysical, reaction center, and photosynthesis model structures\nair AirLayer structure for environmental conditions like O₂ partial pressure\nmode GCO₂Mode or PCO₂Mode that uses CO₂ conductance or partial pressure to compute photosynthetic rates\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.leaf_photosynthesis!-Union{Tuple{FT}, Tuple{ClimaCache.MonoElementSPAC{FT}, Union{ClimaCache.GCO₂Mode, ClimaCache.PCO₂Mode}}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.leaf_photosynthesis!","text":"leaf_photosynthesis!(spac::MonoElementSPAC{FT}, mode::Union{GCO₂Mode, PCO₂Mode}) where {FT<:AbstractFloat}\nleaf_photosynthesis!(spac::Union{MonoMLGrassSPAC{FT}, MonoMLPalmSPAC{FT}, MonoMLTreeSPAC{FT}}, mode::Union{GCO₂Mode, PCO₂Mode}) where {FT<:AbstractFloat}\n\nUpdates leaf photosynthetic rates for SPAC, given\n\nspac MonoElementSPAC, MonoMLGrassSPAC, MonoMLPalmSPAC, or MonoMLTreeSPAC type SPAC\nmode GCO₂Mode or PCO₂Mode\n\n\n\n\n\n","category":"method"},{"location":"API/#Temperature-dependency","page":"API","title":"Temperature dependency","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"temperature_correction\ntemperature_corrected_value\nphotosystem_temperature_dependence!\n∂R∂T","category":"page"},{"location":"API/#Photosynthesis.temperature_correction","page":"API","title":"Photosynthesis.temperature_correction","text":"temperature_correction(td::Arrhenius{FT}, t::FT; t_ref::FT = td.T_REF) where {FT<:AbstractFloat}\ntemperature_correction(td::ArrheniusPeak{FT}, t::FT; t_ref::FT = td.T_REF) where {FT<:AbstractFloat}\ntemperature_correction(td::Q10{FT}, t::FT; t_ref::FT = td.T_REF) where {FT<:AbstractFloat}\ntemperature_correction(td::Q10Peak{FT}, t::FT; t_ref::FT = td.T_REF) where {FT<:AbstractFloat}\n\nReturn the correction ratio for a temperature dependent variable, given\n\ntd Arrhenius, ArrheniusPeak, Q10, or Q10Peak type temperature dependency struture\nt Target temperature in K\nt_ref Reference temperature in K, default is td.T_REF (298.15 K)\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.temperature_corrected_value","page":"API","title":"Photosynthesis.temperature_corrected_value","text":"temperature_corrected_value(td::Union{Arrhenius{FT}, ArrheniusPeak{FT}, Q10{FT}, Q10Peak{FT}}, t::FT; t_ref::FT = td.T_REF) where {FT<:AbstractFloat}\n\nReturn the temperature corrected value, given\n\ntd Arrhenius, ArrheniusPeak, Q10, or Q10Peak type temperature dependency struture\nt Target temperature in K\nt_ref Reference temperature in K, default is td.T_REF (298.15 K)\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.photosystem_temperature_dependence!","page":"API","title":"Photosynthesis.photosystem_temperature_dependence!","text":"photosystem_temperature_dependence!(psm::C3CytochromeModel{FT}, air::AirLayer{FT}, t::FT) where {FT<:AbstractFloat}\nphotosystem_temperature_dependence!(psm::C3VJPModel{FT}, air::AirLayer{FT}, t::FT) where {FT<:AbstractFloat}\nphotosystem_temperature_dependence!(psm::C4VJPModel{FT}, air::AirLayer{FT}, t::FT) where {FT<:AbstractFloat}\n\nUpdate the temperature dependencies of C3 photosynthesis model, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for photosynthesis model\nair AirLayer structure for environmental conditions like O₂ partial pressure\nt Target temperature in K\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.∂R∂T","page":"API","title":"Photosynthesis.∂R∂T","text":"∂R∂T(leaf::Leaf{FT}) where {FT<:AbstractFloat}\n∂R∂T(leaves::Leaves1D{FT}) where {FT<:AbstractFloat}\n∂R∂T(leaves::Leaves2D{FT}) where {FT<:AbstractFloat}\n\nReturn the marginal increase in respiration rate per temperature, given\n\nleaf Leaf type leaf\nleaves Leaves1D or Leaves2D type leaf\n\n\n\n\n\n","category":"function"},{"location":"API/#Electron-transport","page":"API","title":"Electron transport","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"photosystem_electron_transport!","category":"page"},{"location":"API/#Photosynthesis.photosystem_electron_transport!","page":"API","title":"Photosynthesis.photosystem_electron_transport!","text":"photosystem_electron_transport!(psm::C3CytochromeModel{FT}, rc::CytochromeReactionCenter{FT}, ppar::FT, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nphotosystem_electron_transport!(psm::C3VJPModel{FT}, rc::VJPReactionCenter{FT}, ppar::FT, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nphotosystem_electron_transport!(psm::C4VJPModel{FT}, rc::VJPReactionCenter{FT}, ppar::FT, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the electron transport rates, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel type C3 photosynthesis model\nrc CytochromeReactionCenter or VJPReactionCenter type photosynthesis system reaction center\nppar Absorbed photosynthetically active radiation in μmol m⁻² s⁻¹\np_i Internal CO₂ partial pressure in Pa, used to compute etoc\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthetic-rates","page":"API","title":"Photosynthetic rates","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"rubisco_limited_rate!\nrubisco_limited_rate!(psm::Union{C3CytochromeModel{FT},C3VJPModel{FT}}, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nrubisco_limited_rate!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nlight_limited_rate!\nlight_limited_rate!(psm::Union{C3CytochromeModel{FT}, C4VJPModel{FT}}) where {FT<:AbstractFloat}\nlight_limited_rate!(psm::C3CytochromeModel{FT}, rc::CytochromeReactionCenter{FT}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nproduct_limited_rate!\nproduct_limited_rate!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}}, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nproduct_limited_rate!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}","category":"page"},{"location":"API/#Photosynthesis.rubisco_limited_rate!","page":"API","title":"Photosynthesis.rubisco_limited_rate!","text":"This function supports two types of calculations:\n\nCalculate the rate from internal CO₂\nCalculate the rate from CO₂ conductance by solving a quadratic function\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.rubisco_limited_rate!-Union{Tuple{FT}, Tuple{Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}}, FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.rubisco_limited_rate!","text":"rubisco_limited_rate!(psm::Union{C3CytochromeModel{FT},C3VJPModel{FT}}, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nrubisco_limited_rate!(psm::C4VJPModel{FT}, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the RubisCO limited photosynthetic rate, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for photosynthesis model\np_i Internal CO₂ partial pressure in Pa\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.rubisco_limited_rate!-Union{Tuple{FT}, Tuple{Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}}, ClimaCache.AirLayer{FT}, FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.rubisco_limited_rate!","text":"rubisco_limited_rate!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nrubisco_limited_rate!(psm::C4VJPModel{FT}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the RubisCO limited photosynthetic rate in conductance mode, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for photosynthesis model\nair AirLayer structure for environmental conditions like O₂ partial pressure\ng_lc Leaf diffusive conductance to CO₂ in [mol m⁻² s⁻¹]\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.light_limited_rate!","page":"API","title":"Photosynthesis.light_limited_rate!","text":"This function supports two types of calculations:\n\nCalculate the rate from internal CO₂\nCalculate the rate from CO₂ conductance by solving a quadratic function\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.light_limited_rate!-Union{Tuple{Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C4VJPModel{FT}}}, Tuple{FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.light_limited_rate!","text":"light_limited_rate!(psm::Union{C3CytochromeModel{FT}, C4VJPModel{FT}}) where {FT<:AbstractFloat}\nlight_limited_rate!(psm::C3VJPModel{FT}) where {FT<:AbstractFloat}\n\nUpdate the electron transport limited photosynthetic rate, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for C3 photosynthesis model\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.light_limited_rate!-Union{Tuple{FT}, Tuple{ClimaCache.C3CytochromeModel{FT}, ClimaCache.CytochromeReactionCenter{FT}, ClimaCache.AirLayer{FT}, FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.light_limited_rate!","text":"light_limited_rate!(psm::C3CytochromeModel{FT}, rc::CytochromeReactionCenter{FT}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nlight_limited_rate!(psm::C3VJPModel{FT}, rc::VJPReactionCenter{FT}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nlight_limited_rate!(psm::C4VJPModel{FT}, rc::VJPReactionCenter{FT}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the electron transport limited photosynthetic rate in conductance mode, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for C3 photosynthesis model\nrc CytochromeReactionCenter or VJPReactionCenter type photosynthesis system reaction center\nair AirLayer structure for environmental conditions like O₂ partial pressure\ng_lc Leaf diffusive conductance to CO₂ in [mol m⁻² s⁻¹]\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.product_limited_rate!","page":"API","title":"Photosynthesis.product_limited_rate!","text":"This function supports two types of calculations:\n\nCalculate the rate from internal CO₂\nCalculate the rate from CO₂ conductance by solving a quadratic function\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.product_limited_rate!-Union{Tuple{FT}, Tuple{Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}}, FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.product_limited_rate!","text":"product_limited_rate!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}}, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nproduct_limited_rate!(psm::C4VJPModel{FT}, p_i::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the product limited photosynthetic rate, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for C3 photosynthesis model\np_i Internal CO₂ partial pressure in Pa, not used in this method\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"method"},{"location":"API/#Photosynthesis.product_limited_rate!-Union{Tuple{FT}, Tuple{Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}}, ClimaCache.AirLayer{FT}, FT}} where FT<:AbstractFloat","page":"API","title":"Photosynthesis.product_limited_rate!","text":"product_limited_rate!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nproduct_limited_rate!(psm::C4VJPModel{FT}, air::AirLayer{FT}, g_lc::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the electron transport limited photosynthetic rate in conductance mode, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel structure for C3 photosynthesis model\nair AirLayer structure for environmental conditions like O₂ partial pressure, not used in this method\ng_lc Leaf diffusive conductance to CO₂ in [mol m⁻² s⁻¹], not used in this method\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"method"},{"location":"API/#Colimitation","page":"API","title":"Colimitation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"colimit_photosynthesis!\ncolimited_rate","category":"page"},{"location":"API/#Photosynthesis.colimit_photosynthesis!","page":"API","title":"Photosynthesis.colimit_photosynthesis!","text":"colimit_photosynthesis!(psm::Union{C3CytochromeModel{FT}, C3VJPModel{FT}, C4VJPModel{FT}}; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nColimit the photosynthesis by rubisco-, light-, and product-limited photosynthetic rates, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel type photosynthesis model\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd (default is 1)\n\n\n\n\n\n","category":"function"},{"location":"API/#Photosynthesis.colimited_rate","page":"API","title":"Photosynthesis.colimited_rate","text":"colimited_rate(a_1::FT, a_2::FT, colim::MinimumColimit{FT}) where {FT<:AbstractFloat}\ncolimited_rate(a_1::FT, a_2::FT, colim::QuadraticColimit{FT}) where {FT<:AbstractFloat}\ncolimited_rate(a_1::FT, a_2::FT, colim::SerialColimit{FT}) where {FT<:AbstractFloat}\ncolimited_rate(a_1::FT, a_2::FT, colim::SquareColimit{FT}) where {FT<:AbstractFloat}\n\nReturn the minimum of two rates, given\n\na_1 Rate 1\na_2 Rate 2\ncolim MinimumColimit, QuadraticColimit, or SerialColimit type struct\n\n\n\n\n\n","category":"function"},{"location":"API/#Coefficients-and-fluorescence","page":"API","title":"Coefficients and fluorescence","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"photosystem_coefficients!","category":"page"},{"location":"API/#Photosynthesis.photosystem_coefficients!","page":"API","title":"Photosynthesis.photosystem_coefficients!","text":"photosystem_coefficients!(psm::C3CytochromeModel{FT}, rc::CytochromeReactionCenter{FT}, ppar::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\nphotosystem_coefficients!(psm::Union{C3VJPModel{FT}, C4VJPModel{FT}}, rc::VJPReactionCenter{FT}, ppar::FT; β::FT = FT(1)) where {FT<:AbstractFloat}\n\nUpdate the rate constants and coefficients in reaction center, given\n\npsm C3CytochromeModel, C3VJPModel, or C4VJPModel type photosynthesis model\nrc CytochromeReactionCenter or VJPReactionCenter type photosynthesis system reaction center\nppar Absorbed photosynthetically active radiation in μmol m⁻² s⁻¹\nβ Tuning factor to downregulate effective Vmax, Jmax, and Rd\n\n\n\n\n\n","category":"function"}]
}
